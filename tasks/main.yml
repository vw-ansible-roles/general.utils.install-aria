---
# tasks file for install-aria

### Aria2 #######################

- name: Install aria2
  ansible.builtin.apt:
    name: aria2
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Create aria2 user config directory
  file:
    path: "{{ install_aria_svchomedir }}/.aria2"
    state: directory
    owner: "{{ install_aria_svcaccount }}"
    group: root
    mode: u=rwx,g=rwx,o-rwx

- name: Template aria2 config file
  ansible.builtin.template:
    src: aria2.conf
    dest: "{{ install_aria_svchomedir }}/.aria2/aria2.conf"
    owner: "{{ install_aria_svcaccount }}"
    group: root
    mode: u=rw,g=rw,o=-rwx
  notify:
    - init aria2 service
    - enable aria2 service
    - daemon reload
    - restart aria2 service

- name: Edit Aria2 startup script
  ansible.builtin.template:
    src: aria2-start.sh
    dest: "{{ install_aria_svcstart }}"
    owner: root
    group: root
    mode: 0755

- name: Edit Aria2 startup service
  ansible.builtin.template:
    src: aria2.service
    dest: "/etc/systemd/system/{{ install_aria_svcname }}.service"
    owner: root
    group: root
    mode: 0644
  notify:
    - init aria2 service
    - enable aria2 service
    - daemon reload
    - restart aria2 service

- name: Flush handlers
  meta: flush_handlers


### Install Nginx and unarchive WebUI files #######################

- name: Fail if mode var value is not 'mainsite', 'virtualhost', or 'include'
  ansible.builtin.fail:
    msg: "The variable 'install_aria_nginx_mode' must be either 'mainsite', 'virtualhost', or 'include'. Current value: {{ install_aria_nginx_mode }}"
  when: install_aria_nginx_mode not in ['mainsite', 'virtualhost', 'include']

- name: Install nginx
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Extract ariang
  ansible.builtin.unarchive:
    src: "{{ install_aria_ariang_archive }}"
    dest: "{{ install_aria_ariang_webdir }}"


### 'mainsite' mode : Install Aria NG as server root #######################
- name: Install WebUI as server root
  block:

    - name: Template nginx site file
      ansible.builtin.template:
        src: nginx_mainsite.j2
        dest: "/etc/nginx/sites-available/default"
        owner: root
        group: root
        mode: u=rw,g=r,o=r

  when: install_aria_nginx_mode == 'mainsite'

### 'include' mode : set as location in default nginx config file  #######################
- name: Install WebUI under specified path
  block:

    - name: Add a block of text after "server {"
      blockinfile:
        path: /etc/nginx/sites-available/default
        insertafter: '^\s*server\s*\{'
        block: |
                location /{{ install_aria_ariang_location }}/ {
                    alias {{ install_aria_ariang_webdir }}/;
                    index index.html;
                    #try_files $uri $uri/ /index.html;
                }
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR ARIA2 WEBUI"

  when: install_aria_nginx_mode == 'include'


### 'virtualhost' mode : set webUI configuration in separate site file #######################
- name: Install WebUI as virtual host in separate site file
  block:

    - name: Template nginx site file
      ansible.builtin.template:
        src: nginx_virtualhost.j2
        dest: "{{ install_aria_nginx_site_destfile }}"
        owner: root
        group: root
        mode: u=rw,g=r,o=r

    # sudo ln -s /etc/nginx/sites-available/ariang /etc/nginx/sites-enabled/
    - name: Create a symbolic link to enable site
      ansible.builtin.file:
        src: "{{ install_aria_nginx_site_destfile }}"
        dest: "{{ install_aria_nginx_sitesenabled }}/{{ install_aria_ariang_sitename }}"
        state: link

  when: install_aria_nginx_mode == 'virtualhost'
  

### Restart Nginx  #######################
- name: Restart service nginx, in all cases
  ansible.builtin.service:
    name: nginx
    state: restarted
